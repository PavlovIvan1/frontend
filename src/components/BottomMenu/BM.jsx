import { useEffect, useState } from 'react'
import { HiLightningBolt } from 'react-icons/hi'
import { useLocation, useNavigate } from 'react-router'
import { Loading } from '../../Loading'
import { fetychGetTaP } from '../../services/requests'
import { useStore } from '../../store/useStore'
import styles from './BM.module.scss'

export function BottomMenu({ isClick, setIsClick }) {
  const navigate = useNavigate();
  const location = useLocation();
  const Home = location.pathname === '/';
  const Friends = location.pathname === '/frens';
  const Earn = location.pathname === '/ecomtasks';
  const Boost = location.pathname === '/boost';
  const Vote = location.pathname === '/notvote';
  const Stats = location.pathname === '/stats';

  const [loading, setLoading] = useState(true);
  const [getTap, setGetTap] = useState(null);
  let percentage = 100;

  const curEnergy = useStore((state) => state.cur_energy);
  const amount_from_z = useStore((state) => state.amount);
  const setCurEnergy = useStore((state) => state.setCurrentEnergy);
  const { increaseCurrentEnergy } = useStore();

  const [isFirstRender, setIsFirstRender] = useState(true);

  const getTapFromB = async () => {
    try {
      const result = await fetychGetTaP();
      setGetTap(result);
      console.log(result);
      percentage =
        (Math.floor(result.current_energy) / result.max_energy) * 100;

      setCurEnergy(result.current_energy);
    } catch (err) {
      console.error(err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    if (Home) {
      getTapFromB();
    }

    setIsFirstRender(false);
  }, []);

  useEffect(() => {
    let intervalId;

    if (!isClick && getTap) {
      if (curEnergy < getTap.max_energy) {
        if (!isFirstRender) {
          if (getTap.max_energy - curEnergy < amount_from_z) {
            intervalId = setInterval(() => {
              const newEnergy = increaseCurrentEnergy(
                getTap.max_energy - curEnergy
              );
            }, 1500);
          } else {
            intervalId = setInterval(() => {
              const newEnergy = increaseCurrentEnergy(
                Math.floor(amount_from_z)
              );
            }, 1500);
          }
        }
      }
    }

    return () => clearInterval(intervalId);
  }, [isClick, getTap, curEnergy, amount_from_z, isFirstRender]);

  if (loading) {
    return <Loading />;
  }

  percentage = (Math.floor(curEnergy) / getTap.max_energy) * 100;

  if (isClick) {
    getTapFromB();
    setIsClick(false);
  }

  return (
    <>
      <div className={styles.bottomMenu}>
        <div className={styles.energyBar}>
          <div
            className={styles.energyFill}
            style={{ width: `${percentage}%` }}
          ></div>
          <span className={styles.energyText}>
          <HiLightningBolt className={styles.iconWithStroke} style={{ fontSize: '17px' }} />
            {isFirstRender
              ? Number(getTap.current_energy).toFixed(0)
              : Number(curEnergy).toFixed(0)}
            /{getTap.max_energy}{' '}
          </span>
        </div>
        <div className={styles.menuOptions}>
          <div className={styles.menuItem}>
            <svg
              width="24"
              height="16"
              viewBox="0 0 24 16"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              onClick={() => navigate('/')}
              className={styles.s}
            >
              <path
                d="M23.9991 7.8218C23.9991 5.83662 19.7882 4.94327 17.6462 4.61749C17.2794 2.82858 16.0575 0 11.9995 0C7.94164 0 6.71968 2.82858 6.35286 4.61749C4.21139 4.94327 0 5.83618 0 7.8218C0 9.18901 2.11267 10.1876 5.02828 10.7821C5.12505 11.5972 5.57783 12.2382 6.19758 12.3911C6.35241 12.4291 6.51444 12.4565 6.67152 12.491L5.59538 14.6353C5.48556 14.8541 5.57693 15.1193 5.80016 15.2272C5.86408 15.2581 5.93159 15.2727 5.99865 15.2727C6.16473 15.2727 6.32451 15.1821 6.40282 15.0261L7.57933 12.6815C8.82334 12.9012 10.1362 13.0153 11.4941 13.0374V14.8307C11.4941 15.0747 11.6957 15.2727 11.9442 15.2727C12.1926 15.2727 12.3943 15.0747 12.3943 14.8307V13.0374C13.7418 13.0153 15.0686 12.9017 16.3136 12.6912L17.4851 15.0261C17.5634 15.1826 17.7232 15.2727 17.8893 15.2727C17.9559 15.2727 18.0239 15.2581 18.0878 15.2272C18.311 15.1193 18.4024 14.8541 18.2926 14.6353L17.2259 12.5096C17.4176 12.4689 17.617 12.4349 17.8038 12.3898C18.4226 12.239 18.8745 11.5985 18.9717 10.7825C21.8873 10.188 24 9.18945 24 7.82224L23.9991 7.8218ZM11.9991 0.884069C15.7883 0.884069 16.6741 3.73121 16.8649 5.42862C16.8946 5.69384 16.7222 5.93961 16.4544 6.01299C15.0466 6.39889 13.5478 6.59427 11.9995 6.59427H11.9986C10.4504 6.59427 8.95117 6.39889 7.54377 6.01299C7.27597 5.93961 7.10359 5.69384 7.1333 5.42862C7.32413 3.73121 8.20989 0.884069 11.9991 0.884069ZM17.5864 11.5313C17.2524 11.6127 16.9023 11.6799 16.5512 11.7457C16.5107 11.7466 16.4715 11.7586 16.4315 11.7705C15.0218 12.0273 13.4952 12.1652 11.9433 12.1652C9.98005 12.1652 8.11987 11.9526 6.41587 11.5331C6.24889 11.492 6.07471 11.2759 5.97975 10.9571C7.83902 11.2648 9.94134 11.4235 11.9991 11.4235C14.0569 11.4235 16.1578 11.2648 18.0167 10.9571C17.9221 11.2705 17.7511 11.4911 17.5864 11.5313ZM11.9991 10.5399C5.12235 10.5399 0.899257 8.9565 0.899257 7.8218C0.899257 7.09111 2.73108 6.09609 6.23404 5.53206C6.25294 6.14958 6.67422 6.69284 7.30163 6.86479C8.78824 7.27191 10.368 7.47834 11.9986 7.47834H11.9995C13.6297 7.47834 15.21 7.27191 16.6966 6.86479C17.324 6.69284 17.7453 6.15002 17.7642 5.53206C21.2671 6.09609 23.0989 7.09111 23.0989 7.8218C23.0989 8.9565 18.8763 10.5399 11.9991 10.5399Z"
                fill={Home ? 'white' : '#AAB2BD'}
              />
              <path
                d="M12.0986 8.72729H11.9012C11.7549 8.72729 11.6362 8.8902 11.6362 9.09093C11.6362 9.29166 11.7549 9.45457 11.9012 9.45457H12.0986C12.2448 9.45457 12.3635 9.29166 12.3635 9.09093C12.3635 8.8902 12.2448 8.72729 12.0986 8.72729Z"
                fill={Home ? 'white' : '#AAB2BD'}
              />
              <path
                d="M4.8261 8H4.62871C4.48246 8 4.36377 8.16291 4.36377 8.36364C4.36377 8.56436 4.48246 8.72727 4.62871 8.72727H4.8261C4.97235 8.72727 5.09104 8.56436 5.09104 8.36364C5.09104 8.16291 4.97235 8 4.8261 8Z"
                fill={Home ? 'white' : '#AAB2BD'}
              />
              <path
                d="M19.1063 8H18.7115C18.419 8 18.1816 8.16291 18.1816 8.36364C18.1816 8.56436 18.419 8.72727 18.7115 8.72727H19.1063C19.3988 8.72727 19.6362 8.56436 19.6362 8.36364C19.6362 8.16291 19.3988 8 19.1063 8Z"
                fill={Home ? 'white' : '#AAB2BD'}
              />
              <path
                d="M8.43113 5.0879C8.45177 5.09008 8.47191 5.09095 8.49206 5.09095C8.73673 5.09095 8.94849 4.92886 8.97895 4.70779C9.08115 3.96857 9.51351 2.67492 11.2552 2.31753C11.5196 2.26292 11.6846 2.02831 11.6237 1.79326C11.5623 1.55777 11.2965 1.41229 11.0341 1.46559C8.62275 1.96059 8.11129 3.82308 8.00369 4.60032C7.97077 4.83974 8.16189 5.05819 8.43113 5.0879Z"
                fill={Home ? 'white' : '#AAB2BD'}
              />
            </svg>

            <span style={{ color: Home ? 'white' : '#AAB2BD' }}>Main</span>
          </div>
          <div className={styles.menuItem}>
            <svg
              width="26"
              height="18"
              viewBox="0 0 26 18"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className={styles.s}
              onClick={() => navigate('/frens')}
            >
              <path
                d="M14.8672 7.32812C13.0469 7.32812 11.5859 5.73438 11.5859 3.73438C11.5859 1.78906 13.0547 0.234375 14.8672 0.234375C16.6719 0.234375 18.1484 1.80469 18.1484 3.74219C18.1484 5.73438 16.6875 7.32812 14.8672 7.32812ZM14.8672 6.41406C16.1406 6.41406 17.1797 5.25 17.1797 3.74219C17.1797 2.29688 16.1406 1.14844 14.8672 1.14844C13.5938 1.14844 12.5469 2.28125 12.5469 3.73438C12.5469 5.24219 13.5859 6.41406 14.8672 6.41406ZM5.86719 7.42969C4.28125 7.42969 3.01562 6.04688 3.01562 4.28906C3.01562 2.60938 4.29688 1.21094 5.86719 1.21094C7.44531 1.21094 8.71875 2.58594 8.71875 4.28125C8.71875 6.03906 7.45312 7.42969 5.86719 7.42969ZM5.86719 6.53125C6.94531 6.53125 7.82031 5.54688 7.82031 4.28125C7.82031 3.08594 6.94531 2.11719 5.86719 2.11719C4.79688 2.11719 3.91406 3.09375 3.91406 4.28906C3.91406 5.54688 4.78906 6.53125 5.86719 6.53125ZM1.42188 14.4922C0.476562 14.4922 0 14.0938 0 13.2812C0 10.8047 2.5 8.375 5.85938 8.375C7.23438 8.375 8.5 8.76562 9.53906 9.52344C9.27344 9.71094 9.04688 9.92188 8.85156 10.1562C8.02344 9.57812 7 9.27344 5.85938 9.27344C3.1875 9.27344 0.90625 11.1484 0.90625 13.2344C0.90625 13.4922 1.01562 13.5938 1.29688 13.5938H7.32812C7.32812 13.9688 7.57031 14.3281 7.85938 14.4922H1.42188ZM16.8906 14.4922H9.83594C8.6875 14.4922 8.14062 14.125 8.14062 13.3359C8.14062 11.3047 10.7031 8.39844 14.875 8.39844C16.3984 8.39844 17.7031 8.78906 18.7422 9.39844C18.4844 9.59375 18.2578 9.8125 18.0469 10.0703C17.2031 9.60938 16.1328 9.3125 14.875 9.3125C11.2031 9.3125 9.10938 11.7578 9.10938 13.2422C9.10938 13.4844 9.23438 13.5781 9.58594 13.5781H16.7422C16.7578 13.8906 16.8047 14.1953 16.8906 14.4922ZM21.5312 17.1719C19.4062 17.1719 17.6484 15.4219 17.6484 13.2891C17.6484 11.1641 19.4062 9.40625 21.5312 9.40625C23.6641 9.40625 25.4141 11.1562 25.4141 13.2891C25.4141 15.4141 23.6406 17.1719 21.5312 17.1719ZM21.5312 15.75C21.7891 15.75 21.9453 15.5781 21.9453 15.3359V13.7031H23.5703C23.8203 13.7031 23.9922 13.5469 23.9922 13.2891C23.9922 13.0312 23.8203 12.8672 23.5703 12.8672H21.9453V11.2422C21.9453 11 21.7891 10.8281 21.5312 10.8281C21.2734 10.8281 21.1094 11 21.1094 11.2422V12.8672H19.4844C19.2422 12.8672 19.0625 13.0312 19.0625 13.2891C19.0625 13.5469 19.2422 13.7031 19.4844 13.7031H21.1094V15.3359C21.1094 15.5781 21.2734 15.75 21.5312 15.75Z"
                fill={Friends ? 'white' : '#AAB2BD'}
              />
            </svg>

            <span style={{ color: Friends ? 'white' : '#AAB2BD' }}>
              Friends
            </span>
          </div>
          <div className={styles.menuItem}>
            <svg
              width="20"
              height="17"
              viewBox="0 0 20 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              onClick={() => navigate('/ecomtasks')}
              className={styles.s}
            >
              <path
                d="M2.5293 16.4853C0.977051 16.4853 0.171875 15.6884 0.171875 14.1445V5.57806C0.171875 4.31634 0.711426 3.58587 1.84863 3.25384L12.8555 0.149344C14.5571 -0.3238 15.7358 0.331961 15.7358 2.05022V3.23723H16.0513C17.6035 3.23723 18.4087 4.05071 18.4087 5.57806V7.26311C19.2886 7.33782 19.8281 7.96038 19.8281 8.84856V10.8491C19.8281 11.7455 19.2886 12.3681 18.4087 12.4428V14.1445C18.4087 15.6718 17.6035 16.4853 16.0513 16.4853H2.5293ZM5.80811 3.23723H14.6899V1.98382C14.6899 1.17864 14.1919 0.788504 13.2954 1.03753L5.7915 3.07952C5.64209 3.11272 5.66699 3.23723 5.80811 3.23723ZM15.2876 12.4511C13.5195 12.4511 12.4155 11.5629 12.4155 9.85296C12.4155 8.1347 13.5195 7.25481 15.2876 7.25481H17.3628V5.62786C17.3628 4.73968 16.8813 4.27483 16.0264 4.27483H2.5459C1.67432 4.27483 1.21777 4.73968 1.21777 5.62786V14.0947C1.21777 14.9911 1.67432 15.4394 2.5459 15.4394H16.0264C16.8813 15.4394 17.3628 14.9911 17.3628 14.0947V12.4511H15.2876ZM15.3374 11.5629H18.0684C18.6411 11.5629 18.9399 11.2392 18.9399 10.6996V9.00628C18.9399 8.45843 18.6411 8.1347 18.0684 8.1347H15.3374C14.0176 8.1347 13.3452 8.77386 13.3452 9.85296C13.3452 10.9321 14.0176 11.5629 15.3374 11.5629ZM15.1797 10.7245C14.6899 10.7245 14.2998 10.3344 14.2998 9.84466C14.2998 9.36321 14.6899 8.97307 15.1797 8.97307C15.6694 8.97307 16.0596 9.36321 16.0596 9.84466C16.0596 10.3344 15.6694 10.7245 15.1797 10.7245Z"
                fill={Earn ? 'white' : '#AAB2BD'}
              />
            </svg>

            <span style={{ color: Earn ? 'white' : '#AAB2BD' }}>Earn</span>
          </div>
          <div className={styles.menuItem}>
            <svg
              width="29"
              height="29"
              viewBox="0 0 29 29"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className={styles.s}
              onClick={() => navigate('/boost')}
            >
              <path
                d="M8.27506 13.5258L15.9282 21.1789L16.5597 21.1789C18.3768 19.3618 18.1054 17.8539 17.8242 17.1682C25.3665 11.4282 24.5517 5.56331 24.5129 5.31409L24.1405 4.94163C23.8905 4.90217 18.0264 4.0881 12.2864 11.6303C11.6006 11.3491 10.0919 11.0786 8.27563 12.8949L8.27506 13.5258ZM16.2326 20.2204L9.23384 13.2216C10.9375 11.7482 12.1067 12.526 12.1585 12.563L12.7768 12.4644C17.4668 6.11509 22.3286 5.76561 23.654 5.80028C23.6886 7.12407 23.3414 11.9868 16.9899 16.6775L16.8946 17.2991C16.9275 17.3484 17.706 18.5167 16.2326 20.2204Z"
                fill={Boost ? 'white' : '#AAB2BD'}
              />
              <path
                d="M23.1196 10.5348L18.9197 6.3349L18.2883 6.96637L22.4882 11.1663L23.1196 10.5348Z"
                fill={Boost ? 'white' : '#AAB2BD'}
              />
              <path
                d="M8.68447 17.5926L11.8616 20.7697L12.3516 20.865L14.9211 19.7789L14.5741 18.9567L12.2809 19.9261L9.52815 17.1733L10.4976 14.8801L9.67535 14.5332L8.58918 17.1026L8.68447 17.5926Z"
                fill={Boost ? 'white' : '#AAB2BD'}
              />
              <path
                d="M16.7529 12.7012C17.5069 13.4552 18.7337 13.4552 19.4876 12.7012C20.2416 11.9472 20.2416 10.7205 19.4876 9.9665C18.7337 9.21253 17.5069 9.21253 16.7529 9.9665C15.9989 10.7205 15.9989 11.9472 16.7529 12.7012ZM18.8562 10.598C19.2615 11.0033 19.2615 11.6644 18.8562 12.0698C18.4508 12.4751 17.7897 12.4751 17.3844 12.0698C16.979 11.6644 16.979 11.0033 17.3844 10.598C17.7897 10.1926 18.4508 10.1926 18.8562 10.598Z"
                fill={Boost ? 'white' : '#AAB2BD'}
              />
              <path
                d="M8.57247 26.3214L11.0178 22.4175L10.2613 21.9439L7.81602 25.8478L8.57247 26.3214Z"
                fill={Boost ? 'white' : '#AAB2BD'}
              />
              <path
                d="M9.27246 20.8134L8.64099 20.1819L4.81199 24.0109L5.44345 24.6424L9.27246 20.8134Z"
                fill={Boost ? 'white' : '#AAB2BD'}
              />
              <path
                d="M7.51141 19.1937L7.0378 18.4372L3.13306 20.8817L3.60667 21.6381L7.51141 19.1937Z"
                fill={Boost ? 'white' : '#AAB2BD'}
              />
            </svg>

            <span style={{ color: Boost ? 'white' : '#AAB2BD' }}>Boost</span>
          </div>
          <div className={styles.menuItem}>
            <svg
              width="22"
              height="20"
              viewBox="0 0 22 20"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className={styles.s}
              onClick={() => navigate('/notvote')}
            >
              <rect
                x="0.520216"
                y="1.02276"
                width="12.1728"
                height="14.3682"
                rx="3.5"
                transform="rotate(-2.36606 0.520216 1.02276)"
                stroke={Vote ? 'white' : '#AAB2BD'}
              />
              <path
                d="M4.09189 7.87322C4.04137 6.91508 4.67301 6.23635 5.48487 6.19354C5.97004 6.16796 6.34205 6.36104 6.57036 6.65704C6.7687 6.33854 7.11834 6.10741 7.60351 6.08182C8.41537 6.03901 9.11489 6.64755 9.16541 7.6057C9.22056 8.65161 8.39546 9.74149 7.1007 10.6874C6.99241 10.7665 6.87424 10.8436 6.79135 10.848C6.71089 10.8522 6.58526 10.788 6.46926 10.7207C5.08219 9.9162 4.14705 8.91913 4.09189 7.87322ZM4.75709 7.83081C4.79861 8.61829 5.64136 9.48577 6.71634 10.121C6.73392 10.1298 6.74662 10.1389 6.75394 10.1385C6.76369 10.138 6.77536 10.1276 6.79192 10.117C7.79413 9.37225 8.54097 8.42096 8.49945 7.63348C8.46975 7.0703 8.06654 6.70283 7.55456 6.72983C7.14741 6.7513 6.94764 6.99653 6.80036 7.217C6.73005 7.32094 6.68347 7.36496 6.60789 7.36895C6.53475 7.3728 6.47649 7.33431 6.40296 7.23795C6.24305 7.03369 6.00885 6.81134 5.59927 6.83293C5.08972 6.8598 4.72739 7.26763 4.75709 7.83081Z"
                fill={Vote ? 'white' : '#AAB2BD'}
              />
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M7.13428 16.9322C7.75132 17.3113 8.56901 17.7171 9.66335 18.2603C11.8277 19.3345 12.9099 19.8716 13.9469 19.8227C14.691 19.7876 15.4105 19.5454 16.0244 19.1233C16.8799 18.5352 17.417 17.4531 18.4912 15.2887L19.4672 13.3221C20.5414 11.1577 21.0785 10.0755 21.0296 9.03857C20.9945 8.29444 20.7523 7.5749 20.3303 6.96102C19.7422 6.10559 18.66 5.56848 16.4956 4.49427C15.7045 4.10165 15.058 3.78079 14.5055 3.53406C14.5236 3.8757 14.5398 4.24896 14.5568 4.65869C14.9801 4.85877 15.4689 5.10108 16.051 5.39001C17.1492 5.93505 17.9143 6.3158 18.4827 6.66304C19.0399 7.00342 19.3248 7.26371 19.5062 7.52753C19.8227 7.98794 20.0044 8.5276 20.0307 9.0857C20.0458 9.4055 19.9762 9.78514 19.7383 10.3931C19.4956 11.0134 19.1165 11.7793 18.5715 12.8775L17.5954 14.8441C17.0504 15.9423 16.6696 16.7074 16.3224 17.2758C15.982 17.8329 15.7217 18.1179 15.4579 18.2993C14.9975 18.6158 14.4578 18.7975 13.8997 18.8238C13.5799 18.8389 13.2003 18.7693 12.5923 18.5314C11.972 18.2887 11.2061 17.9096 10.1079 17.3645C9.73046 17.1772 9.39235 17.0093 9.08805 16.8554C8.89119 16.8639 8.68535 16.8724 8.46989 16.8813C7.977 16.9017 7.53443 16.92 7.13428 16.9322Z"
                fill={Vote ? 'white' : '#AAB2BD'}
              />
            </svg>

            <span style={{ color: Vote ? 'white' : '#AAB2BD' }}>Survey</span>
          </div>
          <div className={styles.menuItem}>
            <svg
              width="17"
              height="17"
              viewBox="0 0 17 17"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              className={styles.s}
              onClick={() => navigate('/stats')}
            >
              <path
                d="M2.6001 16.4C3.13343 12.9333 4.6801 5.99998 6.6001 5.99998C9.0001 5.99998 9.0001 9.19998 11.0001 9.19998C12.6001 9.19998 13.2668 7.06664 13.4001 5.99998C13.5334 4.53331 14.4401 1.59998 17.0001 1.59998"
                stroke={Stats ? 'white' : '#AAB2BD'}
              />
              <path
                d="M1 0V13.2C1 14.2667 1.64 16.4 4.2 16.4C6.76 16.4 13.8 16.4 17 16.4"
                stroke={Stats ? 'white' : '#AAB2BD'}
              />
            </svg>

            <span style={{ color: Stats ? 'white' : '#AAB2BD' }}>Stats</span>
          </div>
        </div>
      </div>
    </>
  );
}
